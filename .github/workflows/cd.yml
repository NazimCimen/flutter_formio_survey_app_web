name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        run: flutter pub get
      - name: Create firebase_options.dart from template
        run: |
          echo "import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;" > lib/firebase_options.dart
          echo "import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;" >> lib/firebase_options.dart
          echo "" >> lib/firebase_options.dart
          echo "class DefaultFirebaseOptions {" >> lib/firebase_options.dart
          echo "  static FirebaseOptions get currentPlatform {" >> lib/firebase_options.dart
          echo "    if (kIsWeb) {" >> lib/firebase_options.dart
          echo "      return web;" >> lib/firebase_options.dart
          echo "    }" >> lib/firebase_options.dart
          echo "    switch (defaultTargetPlatform) {" >> lib/firebase_options.dart
          echo "      case TargetPlatform.android:" >> lib/firebase_options.dart
          echo "        throw UnsupportedError(" >> lib/firebase_options.dart
          echo "        'DefaultFirebaseOptions have not been configured for android - '" >> lib/firebase_options.dart
          echo "        'you can reconfigure this by running the FlutterFire CLI again.',);" >> lib/firebase_options.dart
          echo "      case TargetPlatform.iOS:" >> lib/firebase_options.dart
          echo "        throw UnsupportedError(" >> lib/firebase_options.dart
          echo "        'DefaultFirebaseOptions have not been configured for android - '" >> lib/firebase_options.dart
          echo "        'you can reconfigure this by running the FlutterFire CLI again.',);" >> lib/firebase_options.dart
          echo "      default:" >> lib/firebase_options.dart
          echo "        throw UnsupportedError('DefaultFirebaseOptions are not supported for this platform.');" >> lib/firebase_options.dart
          echo "    }" >> lib/firebase_options.dart
          echo "  }" >> lib/firebase_options.dart
          echo "" >> lib/firebase_options.dart
          echo "  static const FirebaseOptions web = FirebaseOptions(" >> lib/firebase_options.dart
          echo "    apiKey: '${{ secrets.FIREBASE_API_KEY_WEB }}'," >> lib/firebase_options.dart
          echo "    appId: '${{ secrets.FIREBASE_APP_ID_WEB }}'," >> lib/firebase_options.dart
          echo "    messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> lib/firebase_options.dart
          echo "    projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> lib/firebase_options.dart
          echo "    authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN_WEB }}'," >> lib/firebase_options.dart
          echo "    storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> lib/firebase_options.dart
          echo "    measurementId: '${{ secrets.FLUTTER_MEASUREMENT_ID_WEB }}'," >> lib/firebase_options.dart
          echo "  );" >> lib/firebase_options.dart
          echo "}" >> lib/firebase_options.dart

      - name: Create firebase.json
        run: |
          echo '{' > firebase.json
          echo '  "flutter": {' >> firebase.json
          echo '    "platforms": {' >> firebase.json
          echo '      "dart": {' >> firebase.json
          echo '        "lib/firebase_options.dart": {' >> firebase.json
          echo '          "projectId": "${{ secrets.FIREBASE_PROJECT_ID }}",' >> firebase.json
          echo '          "configurations": {' >> firebase.json
          echo '            "web": "${{ secrets.FIREBASE_WEB_CONFIG }}"' >> firebase.json
          echo '          }' >> firebase.json
          echo '        }' >> firebase.json
          echo '      }' >> firebase.json
          echo '    }' >> firebase.json
          echo '  },' >> firebase.json
          echo '  "hosting": {' >> firebase.json
          echo '    "public": "build/web",' >> firebase.json
          echo '    "ignore": [' >> firebase.json
          echo '      "firebase.json",' >> firebase.json
          echo '      "**/.*",' >> firebase.json
          echo '      "**/node_modules/**"' >> firebase.json
          echo '    ],' >> firebase.json
          echo '    "rewrites": [' >> firebase.json
          echo '      {' >> firebase.json
          echo '        "source": "**",' >> firebase.json
          echo '        "destination": "/index.html"' >> firebase.json
          echo '      }' >> firebase.json
          echo '    ]' >> firebase.json
          echo '  }' >> firebase.json
          echo '}' >> firebase.json

      - name: Build Flutter Web
        run: flutter build web --release 
        
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: production 
          projectId: "${{ secrets.FIREBASE_PROJECT_ID }}"
